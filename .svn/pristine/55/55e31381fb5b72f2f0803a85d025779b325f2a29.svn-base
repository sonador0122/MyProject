package main;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import dao.AdminMemberDAO;
import dto.AdminMemberDTO;
import dto.EventsDTO;
import facebook4j.Facebook;
import facebook4j.FacebookException;
import facebook4j.FacebookFactory;
import facebook4j.Media;
import facebook4j.PagePhotoUpdate;
import facebook4j.PhotoUpdate;
import facebook4j.Post;
import facebook4j.Reading;
import facebook4j.ResponseList;
import facebook4j.FacebookResponse.Metadata.Connections;
import facebook4j.api.PageMethods;

@Controller
public class FacebookController {

	@Autowired
	@Qualifier("admindao")
	AdminMemberDAO dao;

	@RequestMapping(value = "facebooksignin.do", method = RequestMethod.GET)
	public ModelAndView SignInServlet(HttpSession session,
			HttpServletRequest request) throws IOException {
		System.out.println("안넘어오는거네");
		// facebook 인스턴스를 생성

		Facebook facebook = new FacebookFactory().getInstance();
		// 권한 요청

		// appkey와 secretkey를 메타데이터에서 정보를 불러옴(facebook4j.properties)
		// 세션에 현재 facebook 인스턴스를 등록
		session.setAttribute("facebook", facebook);

		// 되돌아갈 url
		StringBuffer callbackURL = request.getRequestURL();
		int index = callbackURL.lastIndexOf("/");
		callbackURL.replace(index, callbackURL.length(), "").append(
				"/callback.do");
		System.out.println(callbackURL);
		System.out.println(facebook.getOAuthAuthorizationURL(callbackURL
				.toString()));
		// 인증을 요청하고 얻어온 주소로 redirect
		return new ModelAndView("redirect:"
				+ facebook.getOAuthAuthorizationURL(callbackURL.toString()));
	}
	
	

	@RequestMapping(value = "/callback.do", method = RequestMethod.GET)
	public ModelAndView Callback(HttpSession session,
			HttpServletRequest request, HttpServletResponse response,
			@RequestParam("code") String oauthCode, @ModelAttribute("addto")AdminMemberDTO member) throws IOException,
			FacebookException {
		
		System.out.println("callback으로넘어와랏!");
		Facebook facebook = (Facebook) session.getAttribute("facebook");

		// 넘겨온 code를 이용해 accesstoken을 얻음
		try {
			facebook.getOAuthAccessToken(oauthCode);
		} catch (FacebookException e) {
			response.getWriter().print(e);
		}
		
		
		String snstype = "f";
		
		String email = facebook.getMe().getEmail();
		String gender = facebook.getMe().getGender();
		String username = facebook.getMe().getName();
		String userid = facebook.getMe().getId();
		String img = facebook.getPhotoURL(facebook.getMe().getId()).toString();
		
		String user_num = dao.searchMember(userid);
		member.setEmail(email);
		member.setUsername(username);
		member.setUserid(userid);
		member.setImg(img);
		member.setSnstype(snstype);
		
		System.out.println(member.toString());
		
		if(user_num != null){
			System.out.println(user_num);	
		}
		else{
			System.out.println(user_num);
			
			dao.insertMember(member);
		}
		
		user_num = dao.searchMember(userid);
		
		boolean conf = dao.searchVisits(user_num);
		
		if(!conf){
			dao.insertVisits(user_num);
		}
		
		
		
		/*
		System.out.println(email);
		System.out.println(gender);
		System.out.println(username);
		System.out.println(img);
		*/
		//System.out.println(country);
		return new ModelAndView("redirect:index.do");
		// 처리가 끝난 후 메인페이지로 이동
	}

	@RequestMapping("/facebooklogout.do")
	public ModelAndView logOut(HttpSession session, HttpServletRequest request)
			throws FacebookException, ServletException {
		Facebook facebook = (Facebook) session.getAttribute("facebook");
		String accessToken = "";
		try {
			accessToken = facebook.getOAuthAccessToken().getToken();
			
		} catch (Exception e) {
			throw new ServletException(e);
		}
		session.invalidate();

		// Log Out of the Facebook
		StringBuffer next = request.getRequestURL();
		int index = next.lastIndexOf("/");
		next.replace(index + 1, next.length(), "");
		System.out.println(next.toString());

		return new ModelAndView(
				"redirect:http://www.facebook.com/logout.php?next="
						+ next.toString() + "index.do&access_token="
						+ accessToken);
	}

	/*@RequestMapping("/feedtest.do")
	public ModelAndView feedTest(HttpSession session, HttpServletRequest request)
			throws FacebookException, ServletException {
		Facebook facebook = (Facebook) session.getAttribute("facebook");

		ResponseList<Post> feedtest = facebook.getFeed();
		int size = feedtest.size();
		for (int i = 0; i < size; i++) {
			System.out.println(feedtest.get(i).getStory());
		}
		return new ModelAndView("redirect:index.do");
	}*/
	@RequestMapping(value = "/feedtest2.do", method = RequestMethod.POST)
	protected ModelAndView feedTest2(HttpSession session, HttpServletRequest request) 
			throws ServletException, IOException, FacebookException {
		request.setCharacterEncoding("UTF-8");
		Facebook facebook = (Facebook) session.getAttribute("facebook");
		
		StringBuffer callbackURL = request.getRequestURL();
		int index = callbackURL.lastIndexOf("/");
		callbackURL.replace(index, callbackURL.length(), "").append("/index.do");
		
		URL url = new URL(callbackURL.toString());
		
		try {
			String message = facebook.getMe().getName()+"님의 작은 후원에 감사드립니다.";
			System.out.println("여기서부터안되는거같은데");
			File file = new File("c:/java/stsprojectwork/EdenProject/src/main/java/classicganji.jpg");
			PagePhotoUpdate photo = new PagePhotoUpdate(new Media(file));
			//System.out.println(facebook.postPagePhoto(photo));
			//facebook.postPagePhoto(photo);
			//link를 걸면서 공유형태(우리 후원 사이트를 홍보해줄 수 있는 api, 대신 사진 넣는 방법을 모르겠음!!)
			//facebook.postLink(url, message);
			String id = facebook.getId();
			//사진과 메세지를 같이 올릴 수 있는 기능
			facebook.postEventPhoto(id, new Media(file), message);
			
			//facebook.postStatusMessage(message);
		} catch (FacebookException e) {
			throw new ServletException(e);
		}
		return new ModelAndView("redirect:index.do");
	}
}
